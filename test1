#include <WiFi.h>
#include <ESPAsyncWebServer.h>
#include <PubSubClient.h>
const char *ssid = "IHR_WIFI_SSID";
const char *password = "IHR_WIFI_PASSWORT";
const char *mqttServer = "MQTT_SERVER_IP";
const int mqttPort = 1883;
const char *mqttUser = "MQTT_BENUTZERNAME";
const char *mqttPassword = "MQTT_PASSWORT";
const int triacPin = 14;
const int zeroCrossPin = 27;
const int fanSpeedPin = 12; // Beispiel-Pin für Lüftergeschwindigkeitssteuerung
AsyncWebServer server(80);
WiFiClient espClient;
PubSubClient client(espClient);
int fanSpeed = 0;
void setup()
{
pinMode(triacPin, OUTPUT);
pinMode(zeroCrossPin, INPUT_PULLUP);
attachInterrupt(digitalPinToInterrupt(zeroCrossPin), zeroCrossing, FALLING);
pinMode(fanSpeedPin, OUTPUT);
Serial.begin(115200);
WiFi.begin(ssid, password);
while (WiFi.status() != WL_CONNECTED)
{
delay(1000);
Serial.println("Connecting to WiFi...");
}
client.setServer(mqttServer, mqttPort);
client.setCallback(callback);
server.on("/", HTTP_GET, [](AsyncWebServerRequest *request) {
String html = "<html><body><h1>Fan Control</h1></body></html>";
request->send(200, "text/html", html);
});

server.on("/speed", HTTP_GET, [](AsyncWebServerRequest *request) {
String speed = String(fanSpeed);
request->send(200, "text/plain", speed);
});

server.on("/speed", HTTP_POST, [](AsyncWebServerRequest *request) {
if (request->hasParam("speed"))
{
fanSpeed = request->getParam("speed")->value().toInt();
analogWrite(fanSpeedPin, fanSpeed);
String speed = String(fanSpeed);
request->send(200, "text/plain", speed);
}
else
{
request->send(400, "text/plain", "Invalid request");
}
});
server.begin();
}
void loop()
{
if (!client.connected())
{
reconnect();
}
client.loop();
}
void zeroCrossing()
{
static unsigned long lastTime = 0;
unsigned long currentTime = micros();
if (currentTime - lastTime >= fanSpeed)
{
digitalWrite(triacPin, HIGH);
delayMicroseconds(10);
digitalWrite(triacPin, LOW);
lastTime = currentTime;
}
}
void reconnect()
{
while (!client.connected())
{
Serial.println("Connecting to MQTT...");
if (client.connect("ESP32Client", mqttUser, mqttPassword))
{
Serial.println("Connected to MQTT");
client.subscribe("fan/speed");
}
else
{
Serial.print("Failed, rc=");
Serial.print(client.state());
Serial.println("Retrying in 5 seconds...");
delay(5000);
}
}
}
void callback(char *topic, byte *payload, unsigned int length)
{
String incoming = "";
for (int i = 0; i < length; i++)
{
incoming += (char)payload[i];
}
incoming.trim();
if (topic == "fan/speed")
{
fanSpeed = incoming.toInt();
analogWrite(fanSpeedPin, fanSpeed);
}
}
